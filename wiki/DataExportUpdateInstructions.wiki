How to update EMMA with new data export:

(Data updates will be released through EMMA's auto-update system. This procedure is for those who do not want to wait for the automatic update)


1. Download and extract .bak file.

2. Copy EveData.mdf (and log file) somewhere like C:\Temp (I'll call this EVEDATA)

3. Make another copy of EveData.mdf (and log file) somewhere like C:\Temp\Old (I'll call this OLDEVEDATA)

4. Open SQL server management studio and attach both databases, change the 'attach as' property to EVEDATA and OLDEVEDATA for clarity

5. Right click EVEDATA->Tasks->Restore->Database

6. Select 'From a device' and browse to the datadump .bak file. Check the 'Restore' option. Go to the options page and check 'overwrite existing database' Change the 'restore as' filenames to match the existing files (e.g. C:\Temp\EveData.mdf and C:\Temp\EveData_log.ldf).  Click 'ok' and wait for it to finish.

7. Right click EVEDATA -> Properties and go to the Files page. Change the logical names to 'EVEDATA' and 'EVEDATA_log' respectively.

8. Open 'Tables' for both EVEDATA and OLDEVEDATA. Remove all tables from EVEDATA that are not in OLDEVEDATA.

9. Right click OLDEVEDATA -> Tasks -> Generate Scripts. Make sure teh correct database is selected (OLDEVEDATA). Leave the defaults options. on the choose object types screen, select Assemblies, Stored Procedures and User Defined Functions. On each of the following screens click 'select all'. Finally, use the 'script to new query editor window' option.

10. scroll to the top and change 'USE [OLDEVEDATA]' to 'USE [EVEDATA]'

11. Click execute.

12. Execute the stored procedure called 'INIT'. This sets up the jump distance tables based upon the new data and should take no more than a few seconds to complete.

13. Right click EVEDATA->tasks->shrink->database, check 'reorganise files' and click ok.

14. Right click EVEDATA->tasks->detatch. check 'drop connection' and click ok.

15. Copy the EVEDATA mdf and log files back to the EMMA folder.